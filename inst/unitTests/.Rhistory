traceback ()
  gx = makeSimpleGraph ()
  gx = graph::addEdge ('C', 'B', gx)
  edgeData (gx, 'C', 'B', attr='edgeType') = 'synthetic rescue'

tx
gx
edgeNames (gx)
load ('~/s/rcy/bugs/fredHoffman/Fred_Hoffman_network.Rdata')
g.fred = igraph.to.graphNEL (yeast)
library (igraph)
g.fred = igraph.to.graphNEL (yeast)
edgemode (g.fred) = 'directed'
g.fred
x = toNodePairTable (g.fred)
dim (x)
 eda.names (g.fred)
args (edgeData)
q ('no')
source ('test_cytoscape.R')
source ('test_cytoscape.R')
source ('test_cytoscape.R')
test.detectUnitializedNodeAttributes ()
q ('no')
source ('test_cytoscape.R')
test.detectUnitializedNodeAttributes ()
q ('no
)
')
q ('no')
source ('test_cytoscape.R')
test.detectUnitializedNodeAttributes ()
q ('no')
source ('test_cytoscape.R')
test.detectUnitializedNodeAttributes ()
q ('no')
source ('test_cytoscape.R')
test.detectUnitializedNodeAttributes ()
test.detectUnitializedEdgeAttributes ()
q ('no')
source ('test_cytoscape.R')
test.detectUnitializedEdgeAttributes ()
test.detectUnitializedNodeAttributes ()
run.tests ()
traceback ()
q ('no')
source ('test_cytoscape.R')
run.tests ()
traceback ()
q ('no')
source ('test_cytoscape.R')
run.tests ()
source ('test_cytoscape.R')
test.hideNodes ()
test.selectEdges ()
test.selectEdges ()
  test.setEdgeLineStyleRule ()
  test.setEdgeLineWidthRule ()
  test.setEdgeColorRule ()
  test.setEdgeTargetArrowRule ()
  test.setEdgeArrowColorRules ()
  test.setEdgeSourceArrowRule ()
  test.movie ()
  test.unmatchedAttributesError ()
  test.remove.redundancies.in.undirected.graph ()
  test.randomUndirectedGraph ()
  test.simpleGraph ()
  test.simpleGraphWithReciprocalEdge ()
  test.setGraph ()
  test.setNodePosition ()
  test.getNodePosition ()
  test.getNodePosition.colonInNodeName ()
  test.getNodeSize ()
  test.haveNodeAttribute ()
  test.haveEdgeAttribute ()
  test.copyNodeAttributesFromCyGraph ()
  test.copyEdgeAttributesFromCyGraph ()
  test.getGraphFromCyWindow ()
  test.sendDegenerateGraphs ()
  test.sendBigGraph ()
  test.createWindowFromSelection ()
  test.addGraphToGraph ()
  test.addGraphToGraph.degenerateFirstGraph ()
  test.existing.CytoscapeWindow ()
  test.existing.CytoscapeWindow.noEdges ()
  test.existing.CytoscapeWindow.emptyGraph ()
  test.getAttributeNames ()
  test.addGetAndDeleteEdgeAttributes ()
  test.addGetAndDeleteNodeAttributes ()
  #test.getAllNodeAttributes ()
  #test.getAllEdgeAttributes ()
  test.getVisualStyleNames ()
  test.copyVisualStyle ()
  test.setVisualStyle ()
  test.defaultColors ()
  test.setWindowSizeRaiseWindow ()
  test.fitContent ()
  test.windowCoordinates ()
  test.zoom ()
  test.center ()
  test.setNodeSizeDirect ()
  test.setNodeWidthAndHeightDirect ()
  test.setNodeFontSizeDirect ()
  test.setNodeShapeDirect ()
  test.setEdgeVizPropertiesDirect ()
  test.graphBAM ()
  test.hexColorToInt ()
  test.addCyNode ()
  test.addCyEdge ()
  test.twoGraphsDoubleEdges ()
  test..classicGraphToNodePairTable ()
  test.rcy.edgeNames ()
  test..getNovelEdges ()
  test.setNodeImageDirect ()
  test.validity ()
  test.tooltip.delays ()

run.tests ()
rm (list=ls())
source ('test_cytoscape.R')
run.tests ()
traceback ()
test..classicGraphToNodePairTable() 
source ('test_cytoscape.R')
test..classicGraphToNodePairTable() 
source ('test_cytoscape.R')
test..classicGraphToNodePairTable() 
source ('test_cytoscape.R'); test..classicGraphToNodePairTable() 
rm (list=ls())
source ('test_cytoscape.R')
run.tests ()
q ('no')
source ('test_cytoscape.R')
test.validity ()
q ('no')
source ('test_cytoscape.R')
test.collectTimings ()
q ('no')
source ('test_cytoscape.R'); test.collectTimings ()
traceback ()
q ('no')
source ('test_cytoscape.R'); test.collectTimings ()
q ('no')
source ('test_cytoscape.R'); test.collectTimings ()
source ('test_cytoscape.R'); test.collectTimings ()
q ('no')
source ('test_cytoscape.R')
run.tests ()
Q
 q ('no')
